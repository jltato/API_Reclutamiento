// <auto-generated />
using System;
using API_Reclutamiento.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Reclutamiento.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Reclutamiento.Models.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<string>("Perteneciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactoId");

                    b.HasIndex("PostulanteId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.DatosPersonales", b =>
                {
                    b.Property<int>("DatosPersonalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DatosPersonalesId"));

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<string>("CantidadTatuajes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.Property<bool>("TieneTatuajes")
                        .HasColumnType("bit");

                    b.HasKey("DatosPersonalesId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("PostulanteId")
                        .IsUnique();

                    b.ToTable("DatosPersonales");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Documento", b =>
                {
                    b.Property<int>("DocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoId"));

                    b.Property<string>("DocumentoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("DocumentoId");

                    b.HasIndex("PostulanteId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomicilioId"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.HasKey("DomicilioId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("PostulanteId");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Establecimiento", b =>
                {
                    b.Property<int>("EstablecimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstablecimientoId"));

                    b.Property<string>("EstablecimientoCiudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablecimientoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstablecimientoId");

                    b.ToTable("Establecimientos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"));

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EstadoCivil", b =>
                {
                    b.Property<int>("EstadoCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoCivilId"));

                    b.Property<string>("EstadoCivilNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCivilId");

                    b.ToTable("EstadosCiviles");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EstadoSeguimiento", b =>
                {
                    b.Property<int>("EstadoSeguimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoSeguimientoId"));

                    b.Property<bool>("Apto")
                        .HasColumnType("bit");

                    b.Property<bool>("Asistencia")
                        .HasColumnType("bit");

                    b.Property<int>("EtapaSeguimientoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaTurno")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Notificado")
                        .HasColumnType("bit");

                    b.Property<int>("SeguimientoId")
                        .HasColumnType("int");

                    b.HasKey("EstadoSeguimientoId");

                    b.HasIndex("EtapaSeguimientoId");

                    b.HasIndex("SeguimientoId");

                    b.ToTable("EstadoSeguimientos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Estudios", b =>
                {
                    b.Property<int>("EstudiosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstudiosId"));

                    b.Property<int>("AnoEgreso")
                        .HasColumnType("int");

                    b.Property<bool>("EnCurso")
                        .HasColumnType("bit");

                    b.Property<string>("InstitutoEducativo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NivelEstudiosId")
                        .HasColumnType("int");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudiosId");

                    b.HasIndex("NivelEstudiosId");

                    b.HasIndex("PostulanteId");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EtapaSeguimiento", b =>
                {
                    b.Property<int>("EtapaSeguimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtapaSeguimientoId"));

                    b.Property<string>("NombreEtapa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EtapaSeguimientoId");

                    b.ToTable("EtapaSeguimientos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Familiares", b =>
                {
                    b.Property<int>("FamiliaresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FamiliaresId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Convive")
                        .HasColumnType("bit");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<bool>("EsEmpleado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentescoId")
                        .HasColumnType("int");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.HasKey("FamiliaresId");

                    b.HasIndex("ParentescoId");

                    b.HasIndex("PostulanteId");

                    b.ToTable("Familiares");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"));

                    b.Property<string>("GeneroNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Localidad", b =>
                {
                    b.Property<int>("LocalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalidadId"));

                    b.Property<string>("LocalidadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalidadId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Nacionalidad", b =>
                {
                    b.Property<int>("NacionalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NacionalidadId"));

                    b.Property<string>("NombreNacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NacionalidadId");

                    b.ToTable("Nacionalidades");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.NivelEstudios", b =>
                {
                    b.Property<int>("NivelEstudiosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelEstudiosId"));

                    b.Property<string>("NivelNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NivelEstudiosId");

                    b.ToTable("NivelEstudios");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Parentesco", b =>
                {
                    b.Property<int>("ParentescoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentescoId"));

                    b.Property<string>("ParentescoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentescoId");

                    b.ToTable("Parentescos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Postulante", b =>
                {
                    b.Property<int>("PostulanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostulanteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int?>("EstabSolicitudId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaNac")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaSoclicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NacionalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.HasKey("PostulanteId");

                    b.HasIndex("EstabSolicitudId");

                    b.HasIndex("NacionalidadId");

                    b.HasIndex("SexoId");

                    b.HasIndex("Apellido", "Nombre", "Dni");

                    b.ToTable("Postulantes");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Seguimiento", b =>
                {
                    b.Property<int>("SeguimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeguimientoId"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoSeguimientoActualId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modify_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modify_By")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoInscripcionId")
                        .HasColumnType("int");

                    b.HasKey("SeguimientoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("EstadoSeguimientoActualId");

                    b.HasIndex("PostulanteId")
                        .IsUnique();

                    b.HasIndex("TipoInscripcionId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Sexo", b =>
                {
                    b.Property<int>("SexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SexoId"));

                    b.Property<string>("SexoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SexoId");

                    b.ToTable("Sexos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoDocumentoId"));

                    b.Property<string>("TipoDocumentoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.TipoInscripcion", b =>
                {
                    b.Property<int>("TipoInscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoInscripcionId"));

                    b.Property<string>("TipoInscripcionNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoInscripcionId");

                    b.ToTable("TipoInscripcions");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Trabajo", b =>
                {
                    b.Property<int>("TrabajoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrabajoId"));

                    b.Property<string>("ActividadLaboral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Desde")
                        .HasColumnType("date");

                    b.Property<string>("EtapaAlzanzada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Hasta")
                        .HasColumnType("date");

                    b.Property<bool>("IntentoAnterior")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoBaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtraFuerza")
                        .HasColumnType("bit");

                    b.Property<int>("PostulanteId")
                        .HasColumnType("int");

                    b.HasKey("TrabajoId");

                    b.HasIndex("PostulanteId");

                    b.ToTable("Trabajo");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Contacto", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Contactos")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.DatosPersonales", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.EstadoCivil", "EstadoCivil")
                        .WithMany("DatosPersonales")
                        .HasForeignKey("EstadoCivilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Genero", "Genero")
                        .WithMany("DatosPersonales")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithOne("DatosPersonales")
                        .HasForeignKey("API_Reclutamiento.Models.DatosPersonales", "PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Documento", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Documentos")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.TipoDocumento", "TipoDocumento")
                        .WithMany("Documentos")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Postulante");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Domicilio", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Localidad", "Localidad")
                        .WithMany("Domicilio")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Domicilios")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidad");

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EstadoSeguimiento", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.EtapaSeguimiento", "EtapaSeguimiento")
                        .WithMany("EstadoSeguimiento")
                        .HasForeignKey("EtapaSeguimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Seguimiento", "Seguimiento")
                        .WithMany("EstadosSeguimiento")
                        .HasForeignKey("SeguimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EtapaSeguimiento");

                    b.Navigation("Seguimiento");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Estudios", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.NivelEstudios", "NivelEstudios")
                        .WithMany("Estudios")
                        .HasForeignKey("NivelEstudiosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Estudios")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NivelEstudios");

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Familiares", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Parentesco", "Parentesco")
                        .WithMany("Familiares")
                        .HasForeignKey("ParentescoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Familiares")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parentesco");

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Postulante", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Establecimiento", "Establecimiento")
                        .WithMany("Postulantes")
                        .HasForeignKey("EstabSolicitudId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API_Reclutamiento.Models.Nacionalidad", "Nacionalidad")
                        .WithMany("Postulantes")
                        .HasForeignKey("NacionalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.Sexo", "Sexo")
                        .WithMany("Postulantes")
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Establecimiento");

                    b.Navigation("Nacionalidad");

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Seguimiento", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Estado", "Estado")
                        .WithMany("Seguimientos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.EstadoSeguimiento", "EstadoSeguimientoActual")
                        .WithMany()
                        .HasForeignKey("EstadoSeguimientoActualId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithOne("Seguimiento")
                        .HasForeignKey("API_Reclutamiento.Models.Seguimiento", "PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Reclutamiento.Models.TipoInscripcion", "TipoInscripcion")
                        .WithMany("Seguimientos")
                        .HasForeignKey("TipoInscripcionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("EstadoSeguimientoActual");

                    b.Navigation("Postulante");

                    b.Navigation("TipoInscripcion");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Trabajo", b =>
                {
                    b.HasOne("API_Reclutamiento.Models.Postulante", "Postulante")
                        .WithMany("Trabajos")
                        .HasForeignKey("PostulanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postulante");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Establecimiento", b =>
                {
                    b.Navigation("Postulantes");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Estado", b =>
                {
                    b.Navigation("Seguimientos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EstadoCivil", b =>
                {
                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.EtapaSeguimiento", b =>
                {
                    b.Navigation("EstadoSeguimiento");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Genero", b =>
                {
                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Localidad", b =>
                {
                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Nacionalidad", b =>
                {
                    b.Navigation("Postulantes");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.NivelEstudios", b =>
                {
                    b.Navigation("Estudios");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Parentesco", b =>
                {
                    b.Navigation("Familiares");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Postulante", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("DatosPersonales");

                    b.Navigation("Documentos");

                    b.Navigation("Domicilios");

                    b.Navigation("Estudios");

                    b.Navigation("Familiares");

                    b.Navigation("Seguimiento");

                    b.Navigation("Trabajos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Seguimiento", b =>
                {
                    b.Navigation("EstadosSeguimiento");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.Sexo", b =>
                {
                    b.Navigation("Postulantes");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.TipoDocumento", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("API_Reclutamiento.Models.TipoInscripcion", b =>
                {
                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
